/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MOD_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <80>;
            bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <80>;
            bindings = <&kp RSHIFT>, <&kp LCTRL>, <&kp ENTER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        r_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
        };

        r_delete {
            bindings = <&kp DELETE>;
            key-positions = <46 47>;
        };

        l_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <14 15>;
        };

        l_delete {
            bindings = <&kp DELETE>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // | CTRL   |A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | BSPC  | RAISE| ENTER | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                                 &kp N6  &kp N7     &kp N8     &kp N9      &kp N0         &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp F     &kp P      &kp G                                  &kp J   &kp L      &kp U      &kp Y       &kp SEMICOLON  &kp NON_US_BACKSLASH
&kp LSHFT  &kp A   &kp R   &kp S     &kp T      &kp D                                  &kp H   &kp N      &kp E      &kp I       &kp O          &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V      &kp B   &kp LEFT_WIN  &kp RIGHT_WIN    &kp K   &kp M      &kp COMMA  &kp PERIOD  &kp SLASH      &kp RCTRL
                           &kp LALT  &kp LSHFT  &mo 1   &kp SPACE     &mt RCTRL ENTER  &sl 2   &kp RSHFT  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |   |  |  |  | |      |      |  |      |       |  _    |  +   |  {    |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3          &bt BT_SEL 4                           &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&trans      &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_4          &kp N5                                 &kp N6          &kp N7            &kp N8        &kp N9                &kp N0                &trans
&trans      &trans        &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                  &kp APOSTROPHE  &kp LEFT_ARROW    &kp UP_ARROW  &kp DOWN_ARROW        &kp RIGHT             &trans
&trans      &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans                &kp UNDER              &trans  &trans  &kp PLUS        &kp MINUS         &kp ASTRK     &kp SLASH             &trans                &trans
                                            &trans             &trans                &trans                 &trans  &trans  &trans          &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  <-  |   v   |  ^    |  ->  |       |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans            &trans         &trans   &trans                     &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans   &trans   &trans
&trans  &kp F1  &kp F2            &kp F3         &kp F4   &kp F5                     &kp F6            &kp F7             &kp F8             &kp F11  &kp F12  &trans
&trans  &trans  &kp LS(NUMBER_6)  &kp LS(GRAVE)  &kp SQT  &kp GRAVE                  &trans            &trans             &trans             &trans   &trans   &trans
&trans  &trans  &trans            &trans         &trans   &trans     &trans  &trans  &trans            &trans             &trans             &trans   &trans   &trans
                                  &trans         &trans   &trans     &trans  &trans  &trans            &trans             &trans
            >;
        };
    };
};
